name: ðŸ”© Publish Release (Auto)

on:
  workflow_call:
    inputs:
      branch:
        type: string
        default: main
        description: "The branch to publish the release from."
      version-prefix:
        type: string
        default: "v"
        description: "The prefix to use for version tags"

permissions:
  contents: write
  id-token: write
  pull-requests: read
  issues: read

jobs:
  release:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Get Current Version from package.json
        id: new_version
        shell: bash
        run: |
          VERSION=$(jq -r .version package.json)
          VERSION_WITH_PREFIX="${{ inputs.version-prefix }}$VERSION"
          echo "Current Version: $VERSION"
          echo "Current Version with prefix: $VERSION_WITH_PREFIX"
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "version-with-prefix=$VERSION_WITH_PREFIX" >> $GITHUB_OUTPUT

      - name: Create GitHub Release
        id: release
        uses: box-id/github-actions/.github/actions/create-github-release@main
        with:
          branch: ${{ inputs.branch }}
          version: ${{ steps.new_version.outputs.version }}
          version-prefix: ${{ inputs.version-prefix }}
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - uses: volta-cli/action@v4
        with:
          registry-url: https://registry.npmjs.org
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Install Dependencies
        if: steps.release.outputs.version_has_changed == 'true'
        run: npm ci

      - name: Build Project
        if: steps.release.outputs.version_has_changed == 'true'
        run: npm run compile

      - name: Publish to npm
        if: steps.release.outputs.version_has_changed == 'true'
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN_PUBLISH }}
        run: npm publish --access restricted
